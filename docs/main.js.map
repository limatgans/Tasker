{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/tasks/tasks.component.css","webpack:///./src/app/tasks/tasks.component.html","webpack:///./src/app/tasks/tasks.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/utils/isNilOrEmpty.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Routes } from '@angular/router';\nimport { TasksComponent } from './tasks/tasks.component';\n\n\nexport const routes: Routes = [\n    { path: '', redirectTo: '/tasks', pathMatch: 'full' },\n    { path: 'tasks', component: TasksComponent },\n\n];\n\n\nexport class AppRoutingModule {}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    {{ title }}!\\n  </h1>\\n  <p>A To Do App Created Using Angular!</p>\\n</div>\\n<router-outlet></router-outlet>\\n\\n<script src=\\\"https://code.jquery.com/jquery-1.12.0.min.js\\\"></script>\\n<script>window.jQuery || document.write('<script src=\\\"js/vendor/jquery-1.12.0.min.js\\\"><\\\\/script>')</script>\\n<script src=\\\"js/plugins.js\\\"></script>\\n<script src=\\\"js/main.js\\\"></script>\\n\\n<!-- Google Analytics: change UA-XXXXX-X to be your site's ID. -->\\n<!-- <script>\\n    (function(b,o,i,l,e,r){b.GoogleAnalyticsObject=l;b[l]||(b[l]=\\n    function(){(b[l].q=b[l].q||[]).push(arguments)});b[l].l=+new Date;\\n    e=o.createElement(i);r=o.getElementsByTagName(i)[0];\\n    e.src='https://www.google-analytics.com/analytics.js';\\n    r.parentNode.insertBefore(e,r)}(window,document,'script','ga'));\\n    ga('create','UA-XXXXX-X','auto');ga('send','pageview');\\n</script> -->\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Tasker';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {RouterModule} from '@angular/router';\nimport {FormsModule} from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n// Components\nimport { AppComponent } from './app.component';\nimport { TasksComponent } from './tasks/tasks.component';\n\n// Routes - For Routing\nimport { routes } from './app-routing.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TasksComponent\n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    FormsModule,\n    RouterModule.forRoot(routes)\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"li {\\n    background: black;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGFza3MvdGFza3MuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGtCQUFrQjtDQUNyQiIsImZpbGUiOiJzcmMvYXBwL3Rhc2tzL3Rhc2tzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJsaSB7XG4gICAgYmFja2dyb3VuZDogYmxhY2s7XG59Il19 */\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6 col-md-offset-3\\\">\\n            <h2>Todo List</h2>\\n            <hr />\\n            <form>\\n                <div class=\\\"input-group\\\">\\n                    <input type=\\\"text\\\" name=\\\"inputTaskName\\\" [(ngModel)]=\\\"inputTask\\\" class=\\\"form-control\\\" placeholder=\\\"Your task\\\"\\n                        required>\\n                    <button class=\\\"btn btn-dark\\\" (click)=\\\"addTask()\\\" type=\\\"submit\\\">Add</button>\\n                </div>\\n            </form>\\n            <table *ngIf=\\\"showTasks\\\" class=\\\" table table-dark table-striped todo-list\\\">\\n                <tr *ngFor=\\\"let activetask of activeTasks; let i= index\\\" [attr.data-index]=\\\"i\\\">\\n                    <td>{{activetask.description}}</td>\\n                    <td class=\\\"text-right\\\">\\n                        <button class=\\\"btn btn-success\\\" (click)=\\\"taskCompletion(i)\\\">\\n                            <!-- <i class=\\\"glyphicon glyphicon-ok\\\"></i> -->\\n                            Ok\\n                        </button>\\n                    </td>\\n                    <td>\\n                        <button class=\\\"btn btn-danger\\\" (click)=\\\"removeActiveTask(i)\\\">\\n                            <!-- <i class=\\\"glyphicon glyphicon-remove\\\"></i> -->\\n                            X\\n                        </button>\\n                    </td>\\n                </tr>\\n\\n                <tr *ngFor=\\\"let task of completedTasks; let i= index\\\" [attr.data-index]=\\\"i\\\">\\n                    <td class=\\\"todo-completed\\\">{{task.description}}</td>\\n                    <td class=\\\"text-right\\\">\\n                        <button class=\\\"btn btn-info\\\" (click)=\\\"repeatTask(i)\\\">\\n                            <!-- <i class=\\\"glyphicon glyphicon-repeat\\\"></i> -->\\n                            Redo\\n                        </button>\\n\\n                    </td>\\n                    <td>\\n                        <button class=\\\"btn btn-danger\\\" (click)=\\\"removeCompletedTask(i)\\\">\\n                            <!-- <i class=\\\"glyphicon glyphicon-remove\\\"></i> -->\\n                            X\\n                        </button>\\n                    </td>\\n                </tr>\\n            </table>\\n        </div>\\n\\n        <div class='col-md-3'>\\n\\n        </div>\\n        <div class=\\\"col-md-3 col-md-offset-3\\\">\\n            <h3>Counts</h3>\\n            <hr />\\n            <ul class='list-group'>\\n                <li class=\\\"list-group-item d-flex justify-content-between align-items-center\\\">Total Tasks\\n                    <span class=\\\"badge badge-primary badge-pill\\\">{{activeTasks.length + completedTasks.length}}</span>\\n                </li>\\n                <li class=\\\"list-group-item d-flex justify-content-between align-items-center\\\">Active Tasks :\\n                    <span class=\\\"badge badge-primary badge-pill\\\">{{activeTasks.length}}</span></li>\\n                <li class=\\\"list-group-item d-flex justify-content-between align-items-center\\\">Completed Tasks :\\n                    <span class=\\\"badge badge-primary badge-pill\\\">{{completedTasks.length}}</span></li>\\n            </ul>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-2\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-dark\\\" (click)=\\\"removeAllCompletedTasks()\\\">Remove Completed Tasks</button>\\n        </div>\\n    </div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport isNilOrEmpty from 'src/utils/isNilOrEmpty';\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.css']\n})\nexport class TasksComponent implements OnInit {\n\n  inputTask: any;\n  showTasks = false;\n  activeTasks: object[];\n  completedTasks: object[];\n\n  // Session Storage Strings\n  storageStrings = {\n    'active': 'activeTasks',\n    'completed': 'completedTasks'\n  };\n  constructor() { }\n\n  ngOnInit() {\n\n    // Initializing Task Array\n    this.activeTasks = [];\n    this.completedTasks = [];\n\n    // Getting task details from Session Storage\n    const sessionActiveTask = sessionStorage.getItem(this.storageStrings.active);\n    const sessionCompTask = sessionStorage.getItem(this.storageStrings.completed);\n\n    if (!isNilOrEmpty(sessionActiveTask)) {\n      this.activeTasks = JSON.parse(sessionStorage.getItem(this.storageStrings.active));\n    }\n\n    if (!isNilOrEmpty(sessionCompTask)) {\n      this.completedTasks = JSON.parse(sessionStorage.getItem(this.storageStrings.completed));\n    }\n\n    this.showTasks = true;\n\n  }\n\n\n  addTask() {\n    // upon pressing add Task Button\n\n    // Validation\n    if (isNilOrEmpty(this.inputTask)) {\n      alert('Please Enter a Task!');\n      return;\n    }\n\n    const taskObj = {\n      'description': this.inputTask\n      // 'status': 'Active'\n    };\n\n    this.activeTasks.push(taskObj);\n    this.storeInSession(this.storageStrings.active, this.activeTasks);\n    this.inputTask = '';\n  }\n\n  taskCompletion(index: number) {\n    // upon pressing Complete Task Button\n\n    this.modifyTask(this.activeTasks, this.completedTasks, this.storageStrings.active, this.storageStrings.completed, index);\n  }\n\n  repeatTask(index: number) {\n    // upon pressing repeat Task Button\n    this.modifyTask(this.completedTasks, this.activeTasks, this.storageStrings.completed, this.storageStrings.active, index);\n  }\n\n  removeActiveTask(index: number) {\n    // upon pressing remove Task Button\n    // Removing the task from Active task\n    if (confirm('Remove Task?')) {\n      this.modifyTask(this.activeTasks, [], this.storageStrings.active, '', index, 'remove');\n    }\n  }\n\n  removeCompletedTask(index: number) {\n    // upon pressing Complete Button\n    // Removing the task from completed task\n    if (confirm('Remove Task?')) {\n      this.modifyTask(this.completedTasks, [], this.storageStrings.completed, '', index, 'remove');\n    }\n  }\n\n  removeAllCompletedTasks() {\n\n    if (isNilOrEmpty(this.completedTasks)) {\n      return;\n    }\n\n    if (confirm('Remove All Tasks?')) {\n\n      this.completedTasks = [];\n      this.storeInSession(this.storageStrings.completed, this.completedTasks);\n\n    }\n  }\n\n  // Used to Modify Tasks\n  modifyTask(initalTask: object[], finalTask: object[], sessionInitialKey: string,\n    sessionFinalKey: string, index: number, modificationType: string = 'modify') {\n\n    // Validations For Initial Values\n    if ([initalTask, sessionInitialKey, index].every(isNilOrEmpty)) {\n      return console.log('Parameters are null or undefined in ModifyTask Function');\n    }\n\n    if (modificationType === 'modify') {\n      // Validations for final values\n      if ([finalTask, sessionFinalKey].every(isNilOrEmpty)) {\n        return console.log('Parameters are null or undefined in ModifyTask Function');\n      }\n\n      // Adding it into Final Task\n      finalTask.push(initalTask[index]);\n      this.storeInSession(sessionFinalKey, finalTask);\n    }\n\n    // Removing the task from Inital task\n    initalTask.splice(index, 1);\n    this.storeInSession(sessionInitialKey, initalTask);\n\n  }\n\n  // Storing in Session\n  storeInSession(sessionKey: string, sessionValue: object[]) {\n    sessionStorage.setItem(sessionKey, JSON.stringify(sessionValue));\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","const isNilOrEmpty = value => value === undefined || value === null || value.length === 0;\nexport default isNilOrEmpty;\n"],"sourceRoot":""}